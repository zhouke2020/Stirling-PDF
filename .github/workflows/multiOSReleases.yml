name: Test Installers Build

on:
  workflow_dispatch:
  release:
    types: [created]

permissions: read-all

jobs:
  build-installers:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            ext: exe
         #- os: macos-latest
         #  platform: mac
         # ext: dmg
         #- os: ubuntu-latest
         #  platform: linux
         #  ext: deb
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up JDK 21
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
        with:
          java-version: "21"
          distribution: "temurin"

      - uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2
        with:
          gradle-version: 8.7

      # Install Windows dependencies
      - name: Install WiX Toolset
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -o wix.exe https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314.exe
          .\wix.exe /install /quiet

      # Install Linux dependencies
      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot rpm

      # Get version number
      - name: Get version number
        id: versionNumber
        run: echo "versionNumber=$(./gradlew printVersion --quiet | tail -1)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Get version number mac
        id: versionNumberMac
        run: echo "versionNumberMac=$(./gradlew printMacVersion --quiet | tail -1)" >> $GITHUB_OUTPUT
        shell: bash

      # Build installer
      - name: Build Installer
        run: ./gradlew build jpackage -x test --info
        env:
          DOCKER_ENABLE_SECURITY: false
          STIRLING_PDF_DESKTOP_UI: true

      # Rename and collect artifacts based on OS
      - name: Prepare artifacts
        id: prepare
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "build/jpackage/Stirling-PDF-${{ steps.versionNumber.outputs.versionNumber }}.exe" "Stirling-PDF-${{ matrix.platform }}-installer.${{ matrix.ext }}"
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mv "build/jpackage/Stirling-PDF-${{ steps.versionNumberMac.outputs.versionNumberMac }}.dmg" "Stirling-PDF-${{ steps.versionNumber.outputs.versionNumber }}-${{ matrix.platform }}.${{ matrix.ext }}"
          else
            mv "build/jpackage/stirling-pdf_${{ steps.versionNumber.outputs.versionNumber }}-1_amd64.deb" "Stirling-PDF-${{ steps.versionNumber.outputs.versionNumber }}-${{ matrix.platform }}.${{ matrix.ext }}"
          fi

      # Upload installer as artifact for testing
      - name: Upload Installer Artifact
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: Stirling-PDF-${{ matrix.platform }}-installer.${{ matrix.ext }}
          path: Stirling-PDF-${{ matrix.platform }}-installer.${{ matrix.ext }}
          retention-days: 1
          if-no-files-found: error

      - name: Upload binaries to release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          files: ./Stirling-PDF-${{ matrix.platform }}-installer.${{ matrix.ext }}
