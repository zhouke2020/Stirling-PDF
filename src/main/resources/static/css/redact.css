.textLayer span::selection,
.textLayer span::-moz-selection {
  background-color: rgba(0, 100, 0, 0.26);
}

.selected-wrapper {
  position: absolute;
  outline: 2px solid darkgreen;
  outline-offset: -2px;
  z-index: 10;
}

.selected-wrapper:hover:not(:has(svg:hover)) {
  outline-color: var(--palette-color, #000000);
  background-color: var(--palette-color, #000000);
  z-index: 10;
  transition: background-color 0.065s linear;

  cursor: pointer;
}

.redaction-overlay {
  display: flex;
  position: absolute;

  left: 40%;
  top: 100%;

  min-width: 25px;
  max-width: 90px;

  min-height: 25px;

  flex-wrap: wrap;

  column-gap: 5px;
  row-gap: 2px;

  border-radius: 2px;
  padding: 2px;

  box-sizing: border-box;

  background-color: rgb(0 96 170);
  outline: 1px solid gray;
}

.redaction-overlay svg {
  height: 25px;
  width: 25px;

  max-width: 35px;
  max-height: 35px;

  fill: rgba(255, 255, 255, 0.904);
  user-select: none;
}

.redaction-overlay svg:hover {
  cursor: pointer;
  background-color: rgb(3, 63, 109);
  fill: rgba(226, 226, 226, 0.904);
}

.textLayer div,
.textLayer div > * {
  user-select: none;
}

.rectangle {
  border: 2px solid #ff0000;
  position: absolute;
}

html {
  --textLayer-pointer-events: auto;
}

.textLayer * {
  pointer-events: var(--textLayer-pointer-events);
}

#man-text-select-redact, #man-shape-redact, #downloadBtn, #uploadBtn, #propertiesBtn {
  height: calc(var(--toolbar-height) - 12px);
  width: calc(var(--toolbar-height) - 12px);

  border-radius: 15px;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
  user-select: none;
}

#text-selection, #shape-selection, #downloadBtnIcon, #uploadBtnIcon, #propertiesBtnIcon {
  position: relative;
  font-size: calc(var(--toolbar-height) - 20px);
}

:is(#man-shape-redact, #man-text-select-redact, #sidebarToggle, #viewThumbnail, #viewOutline).toggled {
  background-color: rgb(50, 159, 243);
  color: rgb(255 255 255);
  outline:rgb(50, 159, 243) !important;
  border-color: rgb(50, 159, 243) !important;
}

:is(#man-shape-redact, #man-text-select-redact, #redactionsPaletteContainer, #downloadBtn, #uploadBtn, #propertiesBtn):hover {
  background-color: rgba(6, 114, 197, 0.82);
  color: rgb(255 255 255);
  outline:rgba(6, 114, 197, 0.82) !important;
  border-color: rgba(6, 114, 197, 0.82) !important;
}

#redactionsPaletteContainer {
  height: calc(var(--toolbar-height) - 12px);
  width: calc(var(--toolbar-height) - 12px);

  border-radius: 15px;
  overflow: hidden;
}

#redactionsPaletteContainer * {
  user-select: none;
  pointer-events: none;
}

#redactions-palette {
  display: inline;
  position: relative;

  border-bottom: 8px solid var(--palette-color);
  border-radius: inherit;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  font-size: calc(var(--toolbar-height) - 20px);
}

#redactions-palette::before {
  position: absolute;
  content: '';
  height: 6px;
  width: 100%;
  left: 0;
  bottom: 0px;
  background-color: var(--palette-color);
}

#apply-redaction {
  height: calc(var(--toolbar-height) - 12px);
  width: calc(var(--toolbar-height) - 12px);

  border-radius: 15px;
}

#apply-redaction[disabled=true], #apply-redaction:disabled:not([disabled=false]) {
  color: rgb(147, 149, 153);
  box-shadow: none !important;
}

#apply-redaction:is(:hover):not([disabled=true], :disabled:not([disabled=false])) {
  cursor: pointer;
  background-color: rgba(6, 114, 197, 0.82);
  color: rgb(255 255 255);
  outline:rgba(6, 114, 197, 0.82) !important;
  border-color: rgba(6, 114, 197, 0.82) !important;
}

.toolbar-btn-hover:hover {
  cursor: pointer;
  background-color: rgba(6, 114, 197, 0.82) !important;
  color: rgb(255 255 255) !important;
  outline:rgba(6, 114, 197, 0.82) !important;
  border-color: rgba(6, 114, 197, 0.82) !important;
}

#apply-redaction-icon {
  font-size: calc(var(--toolbar-height) - 20px);
}

#apply-redaction > span {
  user-select: none;
  pointer-events: none;
}

#pageRedactColor, input[data-for=pageRedactColor] {
  flex: 1;
  padding: 1px;
}

#pageRedactColor:is(:hover, :focus-within), input[data-for=pageRedactColor]:is(:hover, :focus-within) {
  cursor: pointer;
}

.palette-color {
  border-bottom: 3px solid var(--palette-color);
}

.palette-color:is(:hover, :focus-within) {
  cursor: pointer;
  background-color: var(--button-hover-color);
}

.splitToolbarButton > .btn-primary, .splitToolbarButton > .btn-secondary, .splitToolbarButton > .toolbarButton {
  margin-left: 3px;
  margin-right: 3px;
}

.spin-animation {
  -webkit-animation: spin 2s linear infinite; /* Safari */
  -moz-animation: spin 2s linear infinite;
  -o-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
}

@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@-moz-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@-o-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.active-redaction {
  z-index: 30 !important;
}

#propertiesOverlay {
  position: absolute;
  left: 34%;
  top: 20%;
  background-color: var(--md-sys-color-surface);
  color: var(--md-sys-color-on-surface);
  border-radius: 3rem;
  z-index: 100;
}
